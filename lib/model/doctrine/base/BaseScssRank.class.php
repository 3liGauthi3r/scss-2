<?php

/**
 * BaseScssRank
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $img
 * @property string $description
 * @property Doctrine_Collection $ScssScout
 * 
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getImg()         Returns the current record's "img" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method Doctrine_Collection getScssScout()   Returns the current record's "ScssScout" collection
 * @method ScssRank            setName()        Sets the current record's "name" value
 * @method ScssRank            setImg()         Sets the current record's "img" value
 * @method ScssRank            setDescription() Sets the current record's "description" value
 * @method ScssRank            setScssScout()   Sets the current record's "ScssScout" collection
 * 
 * @package    scss
 * @subpackage model
 * @author     David Durost
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseScssRank extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('scss_rank');
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('img', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ScssScout', array(
             'local' => 'id',
             'foreign' => 'rank_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}