<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('DdClient', 'doctrine');

/**
 * BaseDdClient
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $company_name
 * @property string $first_name
 * @property string $last_name
 * @property string $email
 * @property string $phone
 * @property string $fax
 * @property string $url
 * @property integer $address_id
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property string $slug
 * @property DdAddressBook $DdAddressBook
 * @property Doctrine_Collection $DdPortfolio
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method string              getCompanyName()   Returns the current record's "company_name" value
 * @method string              getFirstName()     Returns the current record's "first_name" value
 * @method string              getLastName()      Returns the current record's "last_name" value
 * @method string              getEmail()         Returns the current record's "email" value
 * @method string              getPhone()         Returns the current record's "phone" value
 * @method string              getFax()           Returns the current record's "fax" value
 * @method string              getUrl()           Returns the current record's "url" value
 * @method integer             getAddressId()     Returns the current record's "address_id" value
 * @method timestamp           getCreatedAt()     Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()     Returns the current record's "updated_at" value
 * @method string              getSlug()          Returns the current record's "slug" value
 * @method DdAddressBook       getDdAddressBook() Returns the current record's "DdAddressBook" value
 * @method Doctrine_Collection getDdPortfolio()   Returns the current record's "DdPortfolio" collection
 * @method DdClient            setId()            Sets the current record's "id" value
 * @method DdClient            setCompanyName()   Sets the current record's "company_name" value
 * @method DdClient            setFirstName()     Sets the current record's "first_name" value
 * @method DdClient            setLastName()      Sets the current record's "last_name" value
 * @method DdClient            setEmail()         Sets the current record's "email" value
 * @method DdClient            setPhone()         Sets the current record's "phone" value
 * @method DdClient            setFax()           Sets the current record's "fax" value
 * @method DdClient            setUrl()           Sets the current record's "url" value
 * @method DdClient            setAddressId()     Sets the current record's "address_id" value
 * @method DdClient            setCreatedAt()     Sets the current record's "created_at" value
 * @method DdClient            setUpdatedAt()     Sets the current record's "updated_at" value
 * @method DdClient            setSlug()          Sets the current record's "slug" value
 * @method DdClient            setDdAddressBook() Sets the current record's "DdAddressBook" value
 * @method DdClient            setDdPortfolio()   Sets the current record's "DdPortfolio" collection
 * 
 * @package    scss
 * @subpackage model
 * @author     David Durost
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDdClient extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('dd_client');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('company_name', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('first_name', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('last_name', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('email', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('phone', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('fax', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('url', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('address_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('slug', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('DdAddressBook', array(
             'local' => 'address_id',
             'foreign' => 'id'));

        $this->hasMany('DdPortfolio', array(
             'local' => 'id',
             'foreign' => 'client_id'));
    }
}