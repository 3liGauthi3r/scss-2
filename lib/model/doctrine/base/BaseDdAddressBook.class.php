<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('DdAddressBook', 'doctrine');

/**
 * BaseDdAddressBook
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $street
 * @property string $suburb
 * @property string $city
 * @property string $zone
 * @property string $country
 * @property string $postal_code
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property float $latitude
 * @property float $longitude
 * @property Doctrine_Collection $DdClient
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getStreet()      Returns the current record's "street" value
 * @method string              getSuburb()      Returns the current record's "suburb" value
 * @method string              getCity()        Returns the current record's "city" value
 * @method string              getZone()        Returns the current record's "zone" value
 * @method string              getCountry()     Returns the current record's "country" value
 * @method string              getPostalCode()  Returns the current record's "postal_code" value
 * @method timestamp           getCreatedAt()   Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()   Returns the current record's "updated_at" value
 * @method float               getLatitude()    Returns the current record's "latitude" value
 * @method float               getLongitude()   Returns the current record's "longitude" value
 * @method Doctrine_Collection getDdClient()    Returns the current record's "DdClient" collection
 * @method DdAddressBook       setId()          Sets the current record's "id" value
 * @method DdAddressBook       setName()        Sets the current record's "name" value
 * @method DdAddressBook       setStreet()      Sets the current record's "street" value
 * @method DdAddressBook       setSuburb()      Sets the current record's "suburb" value
 * @method DdAddressBook       setCity()        Sets the current record's "city" value
 * @method DdAddressBook       setZone()        Sets the current record's "zone" value
 * @method DdAddressBook       setCountry()     Sets the current record's "country" value
 * @method DdAddressBook       setPostalCode()  Sets the current record's "postal_code" value
 * @method DdAddressBook       setCreatedAt()   Sets the current record's "created_at" value
 * @method DdAddressBook       setUpdatedAt()   Sets the current record's "updated_at" value
 * @method DdAddressBook       setLatitude()    Sets the current record's "latitude" value
 * @method DdAddressBook       setLongitude()   Sets the current record's "longitude" value
 * @method DdAddressBook       setDdClient()    Sets the current record's "DdClient" collection
 * 
 * @package    scss
 * @subpackage model
 * @author     David Durost
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDdAddressBook extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('dd_address_book');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('street', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('suburb', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('city', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('zone', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('country', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'USA',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('postal_code', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('latitude', 'float', 16, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('longitude', 'float', 16, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('DdClient', array(
             'local' => 'id',
             'foreign' => 'address_id'));
    }
}